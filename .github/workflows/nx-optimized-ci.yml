name: Nx Optimized CI
# Optimized CI pipeline for Nx workspace

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

env:
  NX_BRANCH: ${{ github.event.number || github.ref_name }}
  NX_RUN_GROUP: ${{ github.run_id }}
  HUSKY: 0

jobs:
  ci:
    name: CI Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Checkout [Default Branch]
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run type checking
        run: npx nx affected --target=typecheck --parallel=3

      - name: Run linting
        run: npx nx affected --target=lint --parallel=3

      - name: Run unit tests
        run: npx nx affected --target=test --parallel=3

      - name: Build affected projects
        run: npx nx affected --target=build --parallel=3

