{
  "name": "standards-dev",
  "version": "1.0.0",
  "description": "",
  "keywords": [],
  "license": "ISC",
  "author": "",
  "main": "index.js",
  "scripts": {
    "build": "echo 'Please specify a site to build using: pnpm build:{site}' && exit 1",
    "build-env": "node scripts/build-with-env.js",
    "build:all": "node scripts/nx-build-all.js",
    "build:all:nx": "nx run standards-dev:build-all",
    "build:affected": "nx run standards-dev:build-affected",
    "build:all:safe": "pnpm clear:all && pnpm build:all",
    "build:all:sequential": "nx run-many --target=build --all --parallel=1",
    "build:all:legacy": "pnpm run build:theme && concurrently \"pnpm run build:portal\" \"pnpm run build:isbdm\" \"pnpm run build:lrm\" \"pnpm run build:frbr\" \"pnpm run build:isbd\" \"pnpm run build:muldicat\" \"pnpm run build:unimarc\"",
    "build:frbr": "nx build frbr",
    "build:isbd": "nx build isbd",
    "build:isbdm": "nx build isbdm",
    "build:lrm": "nx build lrm",
    "build:muldicat": "nx build muldicat",
    "build:portal": "nx build portal",
    "build:shared-config": "nx build shared-config",
    "build:theme": "nx build @ifla/theme",
    "build:unimarc": "nx build unimarc",
    "build:clean": "nx reset && pnpm build:all",
    "build:clean:portal": "nx reset portal @ifla/theme shared-config && nx build portal",
    "build:clean:frbr": "nx reset frbr @ifla/theme shared-config && nx build frbr",
    "build:clean:isbd": "nx reset isbd @ifla/theme shared-config && nx build isbd",
    "build:clean:isbdm": "nx reset isbdm @ifla/theme shared-config && nx build isbdm",
    "build:clean:lrm": "nx reset lrm @ifla/theme shared-config && nx build lrm",
    "build:clean:muldicat": "nx reset muldicat @ifla/theme shared-config && nx build muldicat",
    "build:clean:unimarc": "nx reset unimarc @ifla/theme shared-config && nx build unimarc",
    "build:deps": "nx build shared-config && nx build @ifla/theme",
    "check:language-tags": "node scripts/check-mediatype-languages.mjs",
    "check:language-tags:ai": "node scripts/check-mediatype-languages.mjs --ai",
    "check:language-tags:ai:md": "node scripts/check-mediatype-languages.mjs --ai --markdown",
    "check:language-tags:ai:test": "node scripts/check-mediatype-languages.mjs --ai --test",
    "check:language-tags:help": "node scripts/check-mediatype-languages.mjs --help",
    "check:language-tags:md": "node scripts/check-mediatype-languages.mjs --markdown",
    "check:languages": "tsx scripts/check-missing-languages.ts",
    "check:languages:help": "tsx scripts/check-missing-languages.ts --help",
    "ci:build-all": "pnpm docs:build && pnpm vocab:release --dry-run",
    "ci:test": "pnpm lint && pnpm run test",
    "clear": "docusaurus clear",
    "clear:all": "rimraf ./libs/shared-config/dist ./standards/*/.docusaurus ./standards/*/build ./portal/.docusaurus ./portal/build ./packages/theme/.docusaurus ./packages/theme/dist ./packages/standards-cli/dist ./node_modules/.cache/webpack",
    "clear:packages": "pnpm run clear:theme",
    "clear:sites": "rimraf ./standards/*/.docusaurus ./standards/*/build ./portal/.docusaurus ./portal/build",
    "clear:theme": "rimraf ./packages/theme/.docusaurus ./packages/theme/dist",
    "clear:webpack": "rimraf node_modules/.cache/webpack",
    "compare:vocabulary": "node scripts/vocabulary-comparison.mjs",
    "compare:vocabulary:help": "node scripts/vocabulary-comparison.mjs --help",
    "compare:vocabulary:md": "node scripts/vocabulary-comparison.mjs --markdown",
    "compare:vocabulary:validate": "node scripts/vocabulary-comparison.mjs --skip-rdf-check --markdown",
    "dctap:generate": "node scripts/dctap-generate.js --profile ./profiles/current.csv --out ./spreadsheets/template.xlsx",
    "deploy": "gh workflow run deploy-all.yml",
    "deploy:build-all": "pnpm run build:all",
    "deploy:status": "gh run list --workflow=deploy-all.yml --limit=5",
    "detect:language-mismatches": "node scripts/detect-language-mismatches.mjs",
    "detect:language-mismatches-local": "node scripts/detect-language-mismatches-local.mjs",
    "detect:language-mismatches-skos": "node scripts/detect-language-mismatches-skos.mjs",
    "docs:build": "docusaurus build",
    "docs:release": "node scripts/release-docs.js",
    "format:mdx": "remark --rc-path .remarkrc.js \"docs/**/*.{md,mdx}\" --output",
    "lint": "eslint .",
    "lint:eslint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:quiet": "eslint . --quiet",
    "lint:quiet:fix": "eslint . --quiet --fix",
    "lint:file": "eslint",
    "lint:mdx": "remark . --ext .mdx,.md",
    "profile-copy": "tsx tools/profile-copy.ts",
    "rdf:folder-to-csv": "tsx scripts/rdf-folder-to-csv.ts",
    "rdf:to-csv": "tsx scripts/rdf-to-csv.ts",
    "scaffold": "tsx scripts/create-ifla-standard.ts",
    "serve": "pnpm stop:portal && docusaurus serve portal",
    "serve:all": "pnpm stop:all && concurrently \"docusaurus serve portal --port 3000\" \"docusaurus serve standards/ISBDM --port 3001\" \"docusaurus serve standards/LRM --port 3002\" \"docusaurus serve standards/FRBR --port 3003\" \"docusaurus serve standards/isbd --port 3004\" \"docusaurus serve standards/muldicat --port 3005\" \"docusaurus serve standards/unimarc --port 3006\"",
    "serve:frbr": "pnpm stop:frbr && docusaurus serve standards/FRBR --port 3003",
    "serve:isbd": "pnpm stop:isbd && docusaurus serve standards/isbd --port 3004",
    "serve:isbdm": "pnpm stop:isbdm && docusaurus serve standards/ISBDM --port 3001",
    "serve:lrm": "pnpm stop:lrm && docusaurus serve standards/LRM --port 3002",
    "serve:muldicat": "pnpm stop:muldicat && docusaurus serve standards/muldicat --port 3005",
    "serve:portal": "pnpm stop:portal && docusaurus serve portal --port 3000",
    "serve:unimarc": "pnpm stop:unimarc && docusaurus serve standards/unimarc --port 3006",
    "sheet:create": "tsx scripts/create-sheet.ts",
    "sheets:export": "ts-node scripts/sheets-export.ts",
    "sheets:import": "ts-node scripts/sheets-import.ts",
    "sheets:ingest": "node scripts/sheets-to-mdx.js --sheet 'https://docs.google.com/...'",
    "start": "pnpm stop:portal && pnpm build:deps && DOCS_ENV=local docusaurus start",
    "start:all": "pnpm stop:all && pnpm build:deps && concurrently \"DOCS_ENV=local docusaurus start portal --port 3000\" \"DOCS_ENV=local docusaurus start standards/ISBDM --port 3001\" \"DOCS_ENV=local docusaurus start standards/LRM --port 3002\" \"DOCS_ENV=local docusaurus start standards/FRBR --port 3003\" \"DOCS_ENV=local docusaurus start standards/isbd --port 3004\" \"DOCS_ENV=local docusaurus start standards/muldicat --port 3005\" \"DOCS_ENV=local docusaurus start standards/unimarc --port 3006\"",
    "start:frbr": "pnpm stop:frbr && DOCS_ENV=local docusaurus start standards/FRBR --port 3003",
    "start:isbd": "pnpm stop:isbd && DOCS_ENV=local docusaurus start standards/isbd --port 3004",
    "start:isbdm": "pnpm stop:isbdm && DOCS_ENV=local docusaurus start standards/ISBDM --port 3001",
    "start:lrm": "pnpm stop:lrm && DOCS_ENV=local docusaurus start standards/LRM --port 3002",
    "start:muldicat": "pnpm stop:muldicat && DOCS_ENV=local docusaurus start standards/muldicat --port 3005",
    "start:portal": "pnpm stop:portal && DOCS_ENV=local docusaurus start portal --port 3000",
    "start:unimarc": "pnpm stop:unimarc && DOCS_ENV=local docusaurus start standards/unimarc --port 3006",
    "stop:all": "lsof -ti:3000,3001,3002,3003,3004,3005,3006 | xargs kill -9 2>/dev/null || true && pkill -f 'docusaurus start' 2>/dev/null || true",
    "stop:frbr": "lsof -ti:3003 | xargs kill -9 2>/dev/null || true",
    "stop:isbd": "lsof -ti:3004 | xargs kill -9 2>/dev/null || true",
    "stop:isbdm": "lsof -ti:3001 | xargs kill -9 2>/dev/null || true",
    "stop:lrm": "lsof -ti:3002 | xargs kill -9 2>/dev/null || true",
    "stop:muldicat": "lsof -ti:3005 | xargs kill -9 2>/dev/null || true",
    "stop:portal": "lsof -ti:3000 | xargs kill -9 2>/dev/null || true",
    "stop:unimarc": "lsof -ti:3006 | xargs kill -9 2>/dev/null || true",
    "swizzle": "docusaurus swizzle",
    "test": "nx test",
    "test:ui": "nx test --ui",
    "test:watch": "nx test --watch",
    "test:all": "nx run-many --target=test --all",
    "test:affected": "nx affected --target=test",
    "validate:builds:nx": "nx run standards-dev:validate:builds",
    "validate:builds:production:nx": "nx run standards-dev:validate:builds:production",
    "nx:performance": "node scripts/nx-performance-check.js",
    "nx:graph": "nx graph",
    "nx:affected": "nx affected --target=build --dry-run",
    "test:regression:optimized": "node scripts/test-site-builds-optimized.js --mode smart",
    "test:regression:fast": "node scripts/test-site-builds-optimized.js --mode fast --skip-build",
    "test:regression:affected": "node scripts/test-site-builds-optimized.js --affected-only",
    "test:portal:optimized": "./scripts/test-portal-builds-optimized.sh",
    "test:pre-push:optimized": "./.husky/pre-push-optimized",
    "test:pre-push:smart": "./.husky/pre-push-smart",
    "test:pre-push:reminder": "./.husky/pre-push-reminder",
    "test:mark-run": "node scripts/mark-tests-run.js",
    "demo:hooks": "./scripts/demo-hooks.sh",
    "typecheck": "tsc --noEmit",
    "typecheck:all": "nx run-many --target=typecheck --all",
    "lint:all": "nx run-many --target=lint --all",
    "lint:affected": "nx affected --target=lint",
    "validate:isbdm-links": "node scripts/validate-isbdm-links.js",
    "validate:navigation": "node scripts/validate-navigation-urls.js",
    "validate:navigation:show": "node scripts/validate-navigation-urls.js show",
    "validate:site-links": "node scripts/validate-site-links.js",
    "validate:built-site": "node scripts/validate-built-site-links.js",
    "validate:env-urls": "node scripts/validate-environment-urls.js",
    "test:builds": "node scripts/test-site-builds.js",
    "test:builds:all": "node scripts/test-site-builds.js --site all",
    "test:builds:portal": "node scripts/test-site-builds.js --site portal",
    "test:builds:config": "node scripts/test-site-builds.js --skip-build",
    "test:builds:production": "node scripts/test-site-builds.js --site all --env production",
    "test:builds:critical": "node scripts/test-site-builds.js --site portal --env production && node scripts/test-site-builds.js --site ISBDM --env production",
    "test:full": "pnpm typecheck && pnpm lint --quiet && pnpm test && pnpm test:builds:config",
    "test:regression": "nx run standards-dev:regression:full",
    "test:regression:nx:fast": "nx run standards-dev:regression:fast",
    "test:pre-commit": "pnpm typecheck && pnpm lint --quiet && pnpm test && pnpm test:builds:config",
    "test:pre-push": "pnpm test:pre-commit && pnpm test:builds:critical",
    "test:pre-push:nx": "nx affected --target=lint && nx affected --target=typecheck && nx affected --target=test && nx affected --target=build",
    "test:e2e": "nx run standards-dev:e2e",
    "test:e2e:ui": "nx run standards-dev:e2e:ui",
    "test:e2e:portal": "nx run portal:e2e",
    "test:e2e:isbdm": "nx run isbdm:e2e",
    "test:e2e:lrm": "nx run lrm:e2e",
    "test:e2e:affected": "nx affected --target=e2e",
    "test:e2e:all": "nx run-many --target=e2e --all",
    "test:pre-push:fast": "./scripts/nx-pre-push-fast.sh",
    "test:pre-push:nx:smart": "./scripts/nx-pre-push.sh",
    "test:portal:e2e": "./scripts/test-portal-builds.sh",
    "vocab:release": "node scripts/release-vocab.js",
    "vocabulary:create": "tsx scripts/create-vocabulary-sheet.ts",
    "vocabulary:create-action": "tsx scripts/create-vocabulary-sheet-action.ts",
    "write-heading-ids": "docusaurus write-heading-ids",
    "write-translations": "docusaurus write-translations",
    "prepare": "husky"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.52.0",
    "@docusaurus/core": "3.8.1",
    "@docusaurus/plugin-client-redirects": "^3.8.1",
    "@docusaurus/plugin-content-docs": "^3.8.1",
    "@docusaurus/preset-classic": "3.8.1",
    "@docusaurus/theme-classic": "^3.8.1",
    "@docusaurus/theme-mermaid": "^3.8.1",
    "@easyops-cn/docusaurus-search-local": "^0.49.2",
    "@ifla/theme": "workspace:*",
    "@mdx-js/react": "^3.1.0",
    "@types/glob": "^8.1.0",
    "@types/jsonld": "^1.5.15",
    "@types/n3": "^1.26.0",
    "@types/node": "^22.15.30",
    "@types/papaparse": "^5.3.16",
    "algoliasearch": "^5.27.0",
    "boxen": "^8.0.1",
    "chalk": "^5.4.1",
    "cli-table3": "^0.6.5",
    "clsx": "^2.1.1",
    "commander": "^14.0.0",
    "cors": "^2.8.5",
    "crypto-browserify": "^3.12.1",
    "csv-parse": "^5.6.0",
    "csv-parser": "^3.2.0",
    "csv-stringify": "^6.5.2",
    "deepmerge-ts": "^7.1.5",
    "docusaurus-plugin-sass": "^0.2.6",
    "dompurify": "^3.2.6",
    "express": "^5.1.0",
    "fastmcp": "^2.2.4",
    "figlet": "^1.8.1",
    "fuse.js": "^7.1.0",
    "glob": "^11.0.2",
    "googleapis": "^149.0.0",
    "gradient-string": "^3.0.0",
    "helmet": "^8.1.0",
    "image-size": "2.0.2",
    "inquirer": "^12.6.3",
    "js-yaml": "^4.1.0",
    "jsdom": "^26.1.0",
    "jsonld": "^8.3.3",
    "jsonwebtoken": "^9.0.2",
    "langdetect": "^0.2.1",
    "lru-cache": "^11.1.0",
    "mermaid": "^11.6.0",
    "n3": "^1.26.0",
    "node-fetch": "^3.3.2",
    "openai": "^4.104.0",
    "ora": "^8.2.0",
    "os-browserify": "^0.3.0",
    "papaparse": "^5.5.3",
    "path-browserify": "^1.0.1",
    "prettier": "^3.5.3",
    "rdfxml-streaming-parser": "^3.0.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-transition-group": "^4.4.5",
    "sass": "^1.89.2",
    "stream-browserify": "^3.0.0",
    "tailwindcss": "^3.4.17",
    "util": "^0.12.5",
    "vite": "^6.3.5",
    "vite-tsconfig-paths": "^5.1.4",
    "xlsx": "^0.18.5",
    "xml2js": "^0.6.2",
    "yaml": "^2.8.0"
  },
  "devDependencies": {
    "@docusaurus/core": "^3.8.1",
    "@docusaurus/eslint-plugin": "^3.8.1",
    "@docusaurus/module-type-aliases": "3.8.1",
    "@docusaurus/plugin-client-redirects": "^3.8.1",
    "@docusaurus/plugin-content-docs": "^3.8.1",
    "@docusaurus/plugin-ideal-image": "^3.8.1",
    "@docusaurus/preset-classic": "^3.8.1",
    "@docusaurus/remark-plugin-npm2yarn": "^3.8.1",
    "@docusaurus/theme-classic": "^3.8.1",
    "@docusaurus/theme-common": "^3.8.1",
    "@docusaurus/theme-live-codeblock": "^3.8.1",
    "@docusaurus/theme-mermaid": "^3.8.1",
    "@docusaurus/theme-search-algolia": "^3.8.1",
    "@docusaurus/tsconfig": "3.8.1",
    "@docusaurus/types": "3.8.1",
    "@docusaurus/utils-common": "^3.8.1",
    "@modelcontextprotocol/inspector": "0.13.0",
    "@nx/eslint": "21.2.1",
    "@nx/js": "21.2.1",
    "@nx/rollup": "^21.2.1",
    "@nx/vite": "21.2.1",
    "@nx/web": "21.2.1",
    "@playwright/mcp": "^0.0.29",
    "@playwright/test": "^1.53.1",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/jest-axe": "^3.5.9",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/langdetect": "^0.2.2",
    "@types/node": "^22.15.30",
    "@types/node-fetch": "^2.6.12",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^19.1.6",
    "@types/react-dom": "^19.1.6",
    "@types/react-transition-group": "^4.4.12",
    "@typescript-eslint/eslint-plugin": "^8.33.1",
    "@typescript-eslint/parser": "^8.33.1",
    "@vitejs/plugin-react": "^4.5.1",
    "@vitest/browser": "^3.2.2",
    "@vitest/coverage-v8": "^3.2.2",
    "@vitest/ui": "^3.0.0",
    "acorn": "^8.15.0",
    "axe-core": "^4.10.3",
    "chalk": "^5.4.1",
    "cheerio": "^1.0.0",
    "clsx": "^2.1.1",
    "commander": "^14.0.0",
    "concurrently": "^9.1.2",
    "dotenv": "^16.5.0",
    "esbuild": "^0.19.4",
    "esbuild-sass-plugin": "^3.2.0",
    "eslint": "^9.29.0",
    "eslint-plugin-mdx": "^3.4.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-unused-imports": "^4.1.4",
    "find-up": "^7.0.0",
    "gray-matter": "^4.0.3",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jest-axe": "^10.0.0",
    "jiti": "2.4.2",
    "jsonc-eslint-parser": "^2.1.0",
    "lint-staged": "^16.1.2",
    "npm-run-all": "^4.1.5",
    "nx": "21.2.1",
    "playwright": "^1.52.0",
    "postcss": "^8.5.5",
    "postcss-modules": "^6.0.1",
    "prism-react-renderer": "^2.4.1",
    "prop-types": "^15.8.1",
    "puppeteer": "^24.10.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "reg-suit": "^0.14.4",
    "remark": "^15.0.1",
    "remark-cli": "^12.0.1",
    "remark-mdx": "^3.1.0",
    "remark-preset-lint-recommended": "^7.0.1",
    "remark-preset-prettier": "^2.0.2",
    "rimraf": "^6.0.1",
    "sass": "^1.89.1",
    "tslib": "^2.3.0",
    "tsup": "^8.0.0",
    "tsx": "^4.20.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.34.1",
    "vitest": "^3.2.2"
  },
  "peerDependencies": {
    "@docusaurus/core": "^3.0.0",
    "@docusaurus/theme-common": "^3.0.0",
    "react": "^18.0.0 || ^19.0.0",
    "react-dom": "^18.0.0 || ^19.0.0"
  },
  "engines": {
    "node": ">=18.0"
  },
  "packageManager": "pnpm@10.12.1+sha512.f0dda8580f0ee9481c5c79a1d927b9164f2c478e90992ad268bbb2465a736984391d6333d2c327913578b2804af33474ca554ba29c04a8b13060a717675ae3ac",
  "browserslist": {
    "development": [
      "last 3 chrome version",
      "last 3 firefox version",
      "last 5 safari version"
    ],
    "production": [
      ">0.5%",
      "not dead",
      "not op_mini all"
    ]
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint --quiet --fix"
    ]
  }
}
