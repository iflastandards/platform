{
  "name": "platform",
  "version": "1.0.0",
  "description": "",
  "keywords": [],
  "license": "ISC",
  "author": "",
  "main": "index.js",
  "scripts": {
    "// GROUP 2: COMPREHENSIVE TESTS": "Full validation suites",
    "// GROUP 5: CI TESTS": "Environment/infrastructure focus",
    "analyze:bundles": "node scripts/analyze-bundle-sizes.js",
    "analyze:bundles:sizes": "node scripts/analyze-bundle-sizes.js bundles",
    "analyze:bundles:source": "node scripts/analyze-bundle-sizes.js source",
    "build": "echo 'Please specify a site to build using: pnpm build:{site}' && exit 1",
    "build-env": "node scripts/build-with-env.js",
    "build:admin": "nx build admin",
    "build:affected": "nx affected --target=build --parallel=3",
    "build:affected:legacy": "nx run platform:build-affected",
    "build:all": "nx run-many --target=build --all --parallel=3",
    "build:all:legacy": "pnpm run build:theme && concurrently \"pnpm run build:portal\" \"pnpm run build:isbdm\" \"pnpm run build:lrm\" \"pnpm run build:frbr\" \"pnpm run build:isbd\" \"pnpm run build:muldicat\" \"pnpm run build:unimarc\"",
    "build:all:nx": "nx run platform:build-all",
    "build:all:safe": "pnpm clear:all && pnpm build:all",
    "build:all:sequential": "nx run-many --target=build --all --parallel=1",
    "build:clean": "nx reset && pnpm build:all",
    "build:frbr": "nx build frbr",
    "build:isbd": "nx build isbd",
    "build:isbdm": "nx build isbdm",
    "build:lrm": "nx build lrm",
    "build:muldicat": "nx build muldicat",
    "build:newtest": "nx build newtest",
    "build:portal": "nx build portal",
    "build:dev-servers": "nx build @ifla/dev-servers",
    "build:theme": "nx build @ifla/theme",
    "build:unimarc": "nx build unimarc",
    "check:language-tags": "node scripts/check-mediatype-languages.mjs",
    "check:language-tags:ai": "node scripts/check-mediatype-languages.mjs --ai",
    "check:language-tags:ai:md": "node scripts/check-mediatype-languages.mjs --ai --markdown",
    "check:language-tags:ai:test": "node scripts/check-mediatype-languages.mjs --ai --test",
    "check:language-tags:help": "node scripts/check-mediatype-languages.mjs --help",
    "check:language-tags:md": "node scripts/check-mediatype-languages.mjs --markdown",
    "check:languages": "tsx scripts/check-missing-languages.ts",
    "check:languages:help": "tsx scripts/check-missing-languages.ts --help",
    "check:basepath": "node scripts/check-basepath-compliance.js",
    "check:basepath:strict": "node scripts/check-basepath-compliance.js --strict",
    "ci:build-all": "pnpm docs:build && pnpm vocab:release --dry-run",
    "ci:test": "pnpm lint && pnpm run test",
    "ci:test:essential": "pnpm typecheck && pnpm lint --quiet && pnpm test --run && node scripts/test-site-builds.js --site all --env local --skip-build",
    "clear": "docusaurus clear",
    "clear:all": "rimraf ./standards/*/.docusaurus ./standards/*/build ./portal/.docusaurus ./portal/build ./packages/theme/.docusaurus ./packages/theme/dist ./packages/standards-cli/dist ./node_modules/.cache/webpack",
    "clear:packages": "pnpm run clear:theme",
    "clear:sites": "rimraf ./standards/*/.docusaurus ./standards/*/build ./portal/.docusaurus ./portal/build",
    "clear:theme": "rimraf ./packages/theme/.docusaurus ./packages/theme/dist",
    "clear:webpack": "rimraf node_modules/.cache/webpack",
    "compare:vocabulary": "node scripts/vocabulary-comparison.mjs",
    "compare:vocabulary:help": "node scripts/vocabulary-comparison.mjs --help",
    "compare:vocabulary:md": "node scripts/vocabulary-comparison.mjs --markdown",
    "compare:vocabulary:validate": "node scripts/vocabulary-comparison.mjs --skip-rdf-check --markdown",
    "dctap:generate": "node scripts/dctap-generate.js --profile ./profiles/current.csv --out ./spreadsheets/template.xlsx",
    "demo:admin": "./scripts/demo-admin-integration.sh",
    "demo:admin:simple": "node scripts/demo-admin-simple.js",
    "demo:hooks": "./scripts/demo-hooks.sh",
    "deploy": "gh workflow run deploy-all.yml",
    "deploy:build-all": "pnpm run build:all",
    "deploy:status": "gh run list --workflow=deploy-all.yml --limit=5",
    "detect:language-mismatches": "node scripts/detect-language-mismatches.mjs",
    "detect:language-mismatches-local": "node scripts/detect-language-mismatches-local.mjs",
    "detect:language-mismatches-skos": "node scripts/detect-language-mismatches-skos.mjs",
    "dev:admin": "nx dev admin --turbopack",
    "dev:admin:debug": "NODE_OPTIONS='--inspect' nx dev admin",
    "dev:servers": "tsx scripts/dev-servers.ts --cli",
    "docs:build": "docusaurus build",
    "docs:release": "node scripts/release-docs.js",
    "format:mdx": "remark --rc-path .remarkrc.js \"docs/**/*.{md,mdx}\" --output",
    "fresh": "pnpm nx:cache:clear && rm -rf node_modules pnpm-lock.yaml && pnpm setup",
    "generate-next-routes-list": "cd ~/code/ifla/standards-dev/apps/admin/src && generate-next-routes-list -o routes.ts",
    "health": "node scripts/health-check.js",
    "lint": "nx affected --target=lint --parallel=3",
    "lint:affected": "nx affected --target=lint --parallel=3",
    "lint:all": "nx run-many --target=lint --all --parallel=3",
    "lint:eslint": "eslint .",
    "lint:file": "eslint",
    "lint:fix": "eslint . --fix",
    "lint:mdx": "remark . --ext .mdx,.md",
    "lint:quiet": "eslint . --quiet",
    "lint:quiet:fix": "eslint . --quiet --fix",
    "lint:test-rules": "node scripts/test-linting-rules.js",
    "lint:tests": "eslint '**/*.test.{js,jsx,ts,tsx}' '**/*.spec.{js,jsx,ts,tsx}' '**/tests/**/*.{js,jsx,ts,tsx}' '**/e2e/**/*.{js,jsx,ts,tsx}'",
    "next-list": "cd ~/code/ifla/standards-dev/apps/admin && next-list",
    "nx:affected": "nx affected --target=build --dry-run",
    "nx:cache:clear": "nx reset",
    "nx:cache:stats": "nx cache statistics",
    "nx:cloud:connect": "nx connect",
    "nx:daemon": "nx daemon",
    "nx:daemon:start": "nx daemon --start",
    "nx:daemon:stop": "nx daemon --stop",
    "nx:daemon:health": "node scripts/nx-daemon-health.js",
    "nx:daemon:ensure": "node scripts/ensure-nx-daemon.js",
    "nx:graph": "nx graph",
    "nx:migrate": "nx migrate latest",
    "nx:monitor": "node scripts/nx-cloud-monitor.js",
    "nx:monitor:cache": "node scripts/nx-cloud-monitor.js cache",
    "nx:monitor:links": "node scripts/nx-cloud-monitor.js links",
    "nx:monitor:test": "node scripts/nx-cloud-monitor.js test",
    "nx:optimize": "node scripts/optimize-nx-performance.js",
    "nx:performance": "node scripts/nx-performance-check.js",
    "nx:repair": "nx repair",
    "output:move": "node scripts/move-output-files.js",
    "prepare": "husky",
    "ports:kill": "node scripts/utils/port-manager.js all",
    "ports:kill:site": "node scripts/utils/port-manager.js site",
    "ports:kill:verbose": "node scripts/utils/port-manager.js all --verbose",
    "profile-copy": "tsx tools/profile-copy.ts",
    "rdf:folder-to-csv": "tsx tools/typescript/rdf-converters/src/rdf-folder-to-csv.ts",
    "rdf:to-csv": "tsx tools/typescript/rdf-converters/src/rdf-to-csv.ts",
    "scaffold": "tsx scripts/create-ifla-standard.ts",
    "serve": "pnpm stop:portal && docusaurus serve portal",
    "serve:admin": "nx serve admin",
    "serve:frbr": "pnpm stop:frbr && docusaurus serve standards/FRBR --port 3003",
    "serve:isbd": "pnpm stop:isbd && docusaurus serve standards/isbd --port 3004",
    "serve:isbdm": "pnpm stop:isbdm && docusaurus serve standards/ISBDM --port 3001",
    "serve:lrm": "pnpm stop:lrm && docusaurus serve standards/LRM --port 3002",
    "serve:muldicat": "pnpm stop:muldicat && docusaurus serve standards/muldicat --port 3005",
    "serve:newtest": "pnpm stop:newtest && docusaurus serve standards/newtest --port 3008",
    "serve:portal": "pnpm stop:portal && docusaurus serve portal --port 3000",
    "serve:robust": "node scripts/start-with-port-cleanup.js serve",
    "serve:robust:nx": "nx run platform:serve-all:robust",
    "serve:robust:site": "node scripts/start-with-port-cleanup.js serve",
    "serve:unimarc": "pnpm stop:unimarc && docusaurus serve standards/unimarc --port 3006",
    "setup": "pnpm install && pnpm nx:daemon:ensure && pnpm health",
    "sheet:create": "tsx scripts/create-sheet.ts",
    "sheets:export": "ts-node scripts/sheets-export.ts",
    "sheets:import": "ts-node scripts/sheets-import.ts",
    "sheets:ingest": "node scripts/sheets-to-mdx.js --sheet 'https://docs.google.com/...'",
    "start": "pnpm stop:portal && pnpm build:theme && DOCS_ENV=local docusaurus start",
    "start:admin": "nx start admin",
    "start:all": "pnpm stop:all && ./node_modules/.bin/concurrently \"DOCS_ENV=local docusaurus start portal --port 3000\" \"DOCS_ENV=local docusaurus start standards/ISBDM --port 3001\" \"DOCS_ENV=local docusaurus start standards/LRM --port 3002\" \"DOCS_ENV=local docusaurus start standards/FRBR --port 3003\" \"DOCS_ENV=local docusaurus start standards/isbd --port 3004\" \"DOCS_ENV=local docusaurus start standards/muldicat --port 3005\" \"DOCS_ENV=local docusaurus start standards/unimarc --port 3006\" \"nx dev admin\"",
    "start:all:interactive": "tsx scripts/dev-servers.ts --mode=interactive",
    "start:all:with-build": "pnpm stop:all && pnpm build:theme && concurrently \"DOCS_ENV=local docusaurus start portal --port 3000\" \"DOCS_ENV=local docusaurus start standards/ISBDM --port 3001\" \"DOCS_ENV=local docusaurus start standards/LRM --port 3002\" \"DOCS_ENV=local docusaurus start standards/FRBR --port 3003\" \"DOCS_ENV=local docusaurus start standards/isbd --port 3004\" \"DOCS_ENV=local docusaurus start standards/muldicat --port 3005\" \"DOCS_ENV=local docusaurus start standards/unimarc --port 3006\" \"nx dev admin\"",
    "start:all:direct": "node scripts/start-all-direct.js",
    "start:all:bypass": "/bin/sh -c 'pnpm stop:all && pnpm build:theme && concurrently \"DOCS_ENV=local docusaurus start portal --port 3000\" \"DOCS_ENV=local docusaurus start standards/ISBDM --port 3001\" \"DOCS_ENV=local docusaurus start standards/LRM --port 3002\" \"DOCS_ENV=local docusaurus start standards/FRBR --port 3003\" \"DOCS_ENV=local docusaurus start standards/isbd --port 3004\" \"DOCS_ENV=local docusaurus start standards/muldicat --port 3005\" \"DOCS_ENV=local docusaurus start standards/unimarc --port 3006\" \"nx dev admin\"'",
    "start:frbr": "pnpm stop:frbr && DOCS_ENV=local docusaurus start standards/FRBR --port 3003",
    "start:isbd": "pnpm stop:isbd && DOCS_ENV=local docusaurus start standards/isbd --port 3004",
    "start:isbdm": "pnpm stop:isbdm && DOCS_ENV=local docusaurus start standards/ISBDM --port 3001",
    "start:lrm": "pnpm stop:lrm && DOCS_ENV=local docusaurus start standards/LRM --port 3002",
    "start:muldicat": "pnpm stop:muldicat && DOCS_ENV=local docusaurus start standards/muldicat --port 3005",
    "start:newtest": "pnpm stop:newtest && DOCS_ENV=local docusaurus start standards/newtest --port 3008",
    "start:portal": "pnpm stop:portal && DOCS_ENV=local docusaurus start portal --port 3000",
    "start:robust": "node scripts/start-with-port-cleanup.js start",
    "start:robust:nx": "nx run platform:start-all:robust",
    "start:robust:site": "node scripts/start-with-port-cleanup.js start",
    "start:unimarc": "pnpm stop:unimarc && DOCS_ENV=local docusaurus start standards/unimarc --port 3006",
    "stop:admin": "lsof -ti:3007 | xargs kill -9 2>/dev/null || true",
    "stop:all": "lsof -ti:3000,3001,3002,3003,3004,3005,3006,3007,3008 | xargs kill -9 2>/dev/null || true && pkill -f 'docusaurus start' 2>/dev/null || true",
    "stop:frbr": "lsof -ti:3003 | xargs kill -9 2>/dev/null || true",
    "stop:isbd": "lsof -ti:3004 | xargs kill -9 2>/dev/null || true",
    "stop:isbdm": "lsof -ti:3001 | xargs kill -9 2>/dev/null || true",
    "stop:lrm": "lsof -ti:3002 | xargs kill -9 2>/dev/null || true",
    "stop:muldicat": "lsof -ti:3005 | xargs kill -9 2>/dev/null || true",
    "stop:newtest": "lsof -ti:3008 | xargs kill -9 2>/dev/null || true",
    "stop:portal": "lsof -ti:3000 | xargs kill -9 2>/dev/null || true",
    "stop:unimarc": "lsof -ti:3006 | xargs kill -9 2>/dev/null || true",
    "swizzle": "docusaurus swizzle",
    "test": "node scripts/test-with-daemon.js",
    "test:nx": "node scripts/nx-test.js",
    "test:vitest": "vitest run --config vitest.config.nx.ts",
    "test:no-daemon": "nx affected --target=test --parallel=3",
    "test:admin": "nx test admin",
    "test:admin:coverage": "nx run admin:test:coverage",
    "test:admin:e2e": "nx run admin:e2e",
    "test:admin:integration": "nx run admin:test:integration",
    "test:admin:roles": "node scripts/test-admin-roles.js",
    "test:admin:unit": "nx run admin:test:unit",
    "test:admin:watch": "nx run admin:test:watch",
    "test:affected": "nx affected --target=test --parallel=3",
    "test:all": "nx run-many --target=test --all --parallel=3",
    "test:builds": "node scripts/test-site-builds.js",
    "test:builds:all": "node scripts/test-site-builds.js --site all",
    "test:builds:config": "node scripts/test-site-builds.js --skip-build",
    "test:builds:critical": "node scripts/test-site-builds.js --site portal --env production && node scripts/test-site-builds.js --site ISBDM --env production",
    "test:builds:portal": "node scripts/test-site-builds.js --site portal",
    "test:builds:production": "node scripts/test-site-builds.js --site all --env production",
    "test:ci": "pnpm test:ci:env",
    "test:ci:env": "node scripts/ci-env-tests.js",
    "test:ci:env:only": "vitest run --config vitest.config.ci-env.ts",
    "test:ci:config": "node scripts/test-site-builds.js --site all --env production --skip-build",
    "test:ci:connectivity": "pnpm vitest run --config vitest.config.ci.ts packages/theme/src/tests/deployment/external-services.test.ts",
    "test:comprehensive": "nx run-many --targets=typecheck,lint,test,build --all --parallel=3 && nx run platform:e2e",
    "test:validate-placement": "node scripts/validate-test-placement.js",
    "test:comprehensive:builds": "nx run-many --target=build --all --parallel=3 && node scripts/test-site-builds.js --site all --env production && pnpm test:post-build:local",
    "test:comprehensive:e2e": "nx run platform:e2e && nx run-many --target=e2e --all",
    "test:comprehensive:unit": "nx run-many --target=test --all --parallel=3",
    "test:coverage": "pnpm test --coverage",
    "test:e2e": "nx run platform:e2e",
    "test:e2e:pre-push": "nx run platform:e2e:pre-push",
    "test:e2e:affected": "nx affected --target=e2e",
    "test:e2e:all": "nx run-many --target=e2e --all",
    "test:e2e:isbdm": "nx run isbdm:e2e",
    "test:e2e:lrm": "nx run lrm:e2e",
    "test:e2e:portal": "nx run portal:e2e",
    "test:e2e:sharded": "SHARD_CURRENT=1 SHARD_TOTAL=4 npx nx playwright:e2e",
    "test:e2e:ui": "nx run platform:e2e:ui",
    "test:explain-strategy": "node scripts/explain-testing-strategy.js",
    "test:full": "pnpm typecheck && pnpm lint --quiet && pnpm test && pnpm test:builds:config",
    "test:mark-run": "node scripts/mark-tests-run.js",
    "test:performance": "npx nx playwright:e2e e2e/performance.spec.ts",
    "test:portal:e2e": "./scripts/test-portal-builds.sh",
    "test:portal:optimized": "./scripts/test-portal-builds-optimized.sh",
    "test:post-build": "DOCS_ENV=${DOCS_ENV:-local} nx playwright:e2e e2e/post-build-validation.spec.ts",
    "test:post-build:local": "DOCS_ENV=local nx playwright:e2e e2e/post-build-validation.spec.ts",
    "test:post-build:preview": "DOCS_ENV=preview nx playwright:e2e e2e/post-build-validation.spec.ts",
    "test:post-build:production": "DOCS_ENV=production nx playwright:e2e e2e/post-build-validation.spec.ts",
    "test:pre-commit": "node scripts/pre-commit-check-optimized.js",
    "test:pre-commit:original": "node scripts/pre-commit-check.js",
    "test:pre-commit:smart": "node scripts/pre-commit-check-smart.js",
    "test:pre-commit:fast": "node scripts/pre-commit-check-fast.js",
    "test:pre-commit:strict": "nx affected --targets=typecheck,lint,test:unit --parallel=3 && node scripts/test-site-builds-affected.js --env local --skip-build",
    "test:pre-push": "pnpm test:pre-commit && pnpm test:builds:critical",
    "test:pre-push:fast": "./scripts/nx-pre-push-fast.sh",
    "test:pre-push:flexible": "node scripts/pre-push-check.js",
    "test:pre-push:nx": "nx affected --target=lint && nx affected --target=typecheck && nx affected --target=test && nx affected --target=build",
    "test:pre-push:nx:smart": "./scripts/nx-pre-push.sh",
    "test:pre-push:optimized": "./.husky/pre-push-optimized",
    "test:pre-push:reminder": "./.husky/pre-push-reminder",
    "test:pre-push:smart": "./.husky/pre-push-smart",
    "test:pre-push:with-e2e": "node -e \"const fs=require('fs'); const cfg=JSON.parse(fs.readFileSync('.prepushrc.json')); cfg.runE2E=true; fs.writeFileSync('.prepushrc.json', JSON.stringify(cfg,null,2)); console.log('E2E enabled for this run');\" && node scripts/pre-push-check.js",
    "test:regression": "nx run platform:regression:full",
    "test:regression:affected": "node scripts/test-site-builds-optimized.js --affected-only",
    "test:regression:fast": "node scripts/test-site-builds-optimized.js --mode fast --skip-build",
    "test:regression:nx:fast": "nx run platform:regression:fast",
    "test:regression:optimized": "node scripts/test-site-builds-optimized.js --mode smart",
    "test:scripts": "nx test scripts",
    "test:scripts:affected": "nx affected --target=test --projects=scripts",
    "test:scripts:all": "nx run scripts:test",
    "test:scripts:coverage": "nx run scripts:test:coverage",
    "test:scripts:file": "nx run scripts:test:specific --",
    "test:scripts:watch": "nx run scripts:test:watch",
    "test:dev-servers": "nx run @ifla/dev-servers:test:on-demand",
    "test:ui": "nx test --ui",
    "test:visual": "npx nx playwright:e2e e2e/visual-regression-enhanced.spec.ts",
    "test:visual-regression": "nx playwright:e2e --config=playwright-snapshots.config.ts",
    "test:visual:update": "npx nx playwright:e2e e2e/visual-regression-enhanced.spec.ts --update-snapshots",
    "test:watch": "nx test --watch",
    "typecheck": "nx affected --target=typecheck --parallel=3",
    "typecheck:all": "nx run-many --target=typecheck --all --parallel=3",
    "validate:builds:nx": "nx run platform:validate:builds",
    "validate:builds:production:nx": "nx run platform:validate:builds:production",
    "validate:built-site": "node scripts/validate-built-site-links.js",
    "validate:env-urls": "node scripts/validate-environment-urls.js",
    "validate:isbdm-links": "node scripts/validate-isbdm-links.js",
    "validate:navigation": "node scripts/validate-navigation-urls.js",
    "validate:navigation:show": "node scripts/validate-navigation-urls.js show",
    "validate:site-links": "node scripts/validate-site-links.js",
    "vocab:release": "node scripts/release-vocab.js",
    "vocabulary:create": "tsx scripts/create-vocabulary-sheet.ts",
    "vocabulary:create-action": "tsx scripts/create-vocabulary-sheet-action.ts",
    "write-heading-ids": "docusaurus write-heading-ids",
    "write-translations": "docusaurus write-translations",
    "dev:interactive": "pnpm ports:kill && pnpm dev:servers --mode=interactive --browser=chrome",
    "dev:headless": "pnpm dev:servers --mode=headless"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.57.0",
    "@auth/core": "^0.40.0",
    "@cerbos/grpc": "^0.22.1",
    "@cerbos/http": "^0.22.1",
    "@clerk/nextjs": "latest",
    "@docusaurus/core": "3.8.1",
    "@docusaurus/plugin-client-redirects": "^3.8.1",
    "@docusaurus/plugin-content-docs": "^3.8.1",
    "@docusaurus/preset-classic": "3.8.1",
    "@docusaurus/theme-classic": "^3.8.1",
    "@docusaurus/theme-mermaid": "^3.8.1",
    "@easyops-cn/docusaurus-search-local": "^0.52.1",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@fontsource/roboto": "^5.2.6",
    "@hookform/resolvers": "^5.2.0",
    "@ifla/dev-servers": "workspace:*",
    "@ifla/theme": "workspace:*",
    "@mdx-js/react": "^3.1.0",
    "@mui/icons-material": "^7.2.0",
    "@mui/lab": "7.0.0-beta.14",
    "@mui/material": "^7.2.0",
    "@mui/x-data-grid": "^8.9.1",
    "@mui/x-tree-view": "^8.9.0",
    "@octokit/rest": "^22.0.0",
    "@supabase/supabase-js": "^2.53.0",
    "@tanstack/react-query": "^5.83.0",
    "@trpc/client": "^11.4.3",
    "@trpc/next": "^11.4.3",
    "@trpc/react-query": "^11.4.3",
    "@trpc/server": "^11.4.3",
    "@types/glob": "^9.0.0",
    "@types/jsonld": "^1.5.15",
    "@types/n3": "^1.26.0",
    "@types/node": "^24.1.0",
    "@types/papaparse": "^5.3.16",
    "algoliasearch": "^5.34.1",
    "boxen": "^8.0.1",
    "chalk": "^5.4.1",
    "cli-table3": "^0.6.5",
    "clsx": "^2.1.1",
    "commander": "^14.0.0",
    "cors": "^2.8.5",
    "crypto-browserify": "^3.12.1",
    "csv-parse": "^6.1.0",
    "csv-parser": "^3.2.0",
    "csv-stringify": "^6.6.0",
    "date-fns": "^4.1.0",
    "deepmerge-ts": "^7.1.5",
    "docusaurus-plugin-sass": "^0.2.6",
    "dompurify": "^3.2.6",
    "execa": "^9.6.0",
    "express": "^5.1.0",
    "fast-glob": "^3.3.3",
    "fastmcp": "^3.11.0",
    "figlet": "^1.8.2",
    "find-root": "^1.1.0",
    "fuse.js": "^7.1.0",
    "glob": "^11.0.3",
    "googleapis": "^154.0.0",
    "gradient-string": "^3.0.0",
    "helmet": "^8.1.0",
    "image-size": "2.0.2",
    "inquirer": "^12.8.2",
    "js-yaml": "^4.1.0",
    "jsdom": "^26.1.0",
    "jsonld": "^8.3.3",
    "jsonwebtoken": "^9.0.2",
    "langdetect": "^0.2.1",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.532.0",
    "mermaid": "^11.9.0",
    "n3": "^1.26.0",
    "next": "~15.4.4",
    "node-fetch": "^3.3.2",
    "openai": "^5.10.2",
    "ora": "^8.2.0",
    "os-browserify": "^0.3.0",
    "papaparse": "^5.5.3",
    "path-browserify": "^1.0.1",
    "prettier": "^3.6.2",
    "rdfxml-streaming-parser": "^3.1.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-helmet-async": "npm:@slorber/react-helmet-async@1.3.0",
    "react-hook-form": "^7.61.1",
    "react-transition-group": "^4.4.5",
    "sass": "^1.89.2",
    "stream-browserify": "^3.0.0",
    "superjson": "^2.2.2",
    "swr": "^2.3.4",
    "tailwindcss": "^4.1.11",
    "tslib": "^2.8.1",
    "util": "^0.12.5",
    "vite": "^7.0.6",
    "vite-tsconfig-paths": "^5.1.4",
    "xlsx": "^0.18.5",
    "xml2js": "^0.6.2",
    "yaml": "^2.8.0",
    "zod": "^4.0.10"
  },
  "devDependencies": {
    "@docusaurus/core": "^3.8.1",
    "@docusaurus/eslint-plugin": "^3.8.1",
    "@docusaurus/faster": "^3.8.1",
    "@docusaurus/module-type-aliases": "3.8.1",
    "@docusaurus/plugin-client-redirects": "^3.8.1",
    "@docusaurus/plugin-content-docs": "^3.8.1",
    "@docusaurus/plugin-ideal-image": "^3.8.1",
    "@docusaurus/preset-classic": "^3.8.1",
    "@docusaurus/remark-plugin-npm2yarn": "^3.8.1",
    "@docusaurus/theme-classic": "^3.8.1",
    "@docusaurus/theme-common": "^3.8.1",
    "@docusaurus/theme-live-codeblock": "^3.8.1",
    "@docusaurus/theme-mermaid": "^3.8.1",
    "@docusaurus/theme-search-algolia": "^3.8.1",
    "@docusaurus/tsconfig": "3.8.1",
    "@docusaurus/types": "3.8.1",
    "@docusaurus/utils-common": "^3.8.1",
    "@kie/mock-github": "^2.0.1",
    "@nx/eslint": "21.3.8",
    "@nx/jest": "21.3.8",
    "@nx/js": "21.3.8",
    "@nx/next": "21.3.8",
    "@nx/node": "21.3.8",
    "@nx/playwright": "21.3.8",
    "@nx/react": "21.3.8",
    "@nx/rollup": "21.3.8",
    "@nx/vite": "21.3.8",
    "@nx/web": "21.3.8",
    "@playwright/mcp": "^0.0.32",
    "@playwright/test": "^1.54.1",
    "@swc-node/register": "~1.10.10",
    "@swc/cli": "~0.7.8",
    "@swc/core": "~1.13.2",
    "@swc/helpers": "~0.5.17",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/jest-axe": "^3.5.9",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/langdetect": "^0.2.2",
    "@types/node": "^22.15.30",
    "@types/node-fetch": "^2.6.12",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/react-transition-group": "^4.4.12",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "acorn": "^8.15.0",
    "autoprefixer": "10.4.21",
    "axe-core": "^4.10.3",
    "cheerio": "^1.1.2",
    "concurrently": "^9.2.0",
    "dotenv": "^17.2.1",
    "esbuild": "^0.25.8",
    "esbuild-sass-plugin": "^3.3.1",
    "eslint": "^9.32.0",
    "eslint-plugin-mdx": "^3.6.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-unused-imports": "^4.1.4",
    "find-up": "^7.0.0",
    "globals": "^16.3.0",
    "google-auth-library": "^10.2.0",
    "gray-matter": "^4.0.3",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-axe": "^10.0.0",
    "jest-environment-node": "^30.0.5",
    "jiti": "2.5.1",
    "jose": "^6.0.12",
    "jsonc-eslint-parser": "^2.4.0",
    "knip": "^5.62.0",
    "lint-staged": "^16.1.2",
    "next-list": "^1.0.18",
    "next-routes-list": "^1.2.0",
    "npm-run-all": "^4.1.5",
    "nx": "21.3.8",
    "playwright": "^1.54.1",
    "postcss": "^8.5.6",
    "postcss-modules": "^6.0.1",
    "prism-react-renderer": "^2.4.1",
    "prop-types": "^15.8.1",
    "puppeteer": "^24.15.0",
    "reg-suit": "^0.14.4",
    "remark": "^15.0.1",
    "remark-cli": "^12.0.1",
    "remark-mdx": "^3.1.0",
    "remark-preset-lint-recommended": "^7.0.1",
    "remark-preset-prettier": "^2.0.2",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.4.0",
    "ts-node": "10.9.2",
    "ts-unused-exports": "11.0.1",
    "tslib": "^2.3.0",
    "tsup": "^8.5.0",
    "tsx": "^4.20.3",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.38.0",
    "vitest": "^3.2.4"
  },
  "peerDependencies": {
    "@docusaurus/core": "^3.0.0",
    "@docusaurus/theme-common": "^3.0.0",
    "react": "^18.0.0 || ^19.0.0",
    "react-dom": "^18.0.0 || ^19.0.0"
  },
  "engines": {
    "node": ">=18.0"
  },
  "packageManager": "pnpm@10.12.4+sha512.5ea8b0deed94ed68691c9bad4c955492705c5eeb8a87ef86bc62c74a26b037b08ff9570f108b2e4dbd1dd1a9186fea925e527f141c648e85af45631074680184",
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": [
      "eslint --quiet --fix"
    ]
  },
  "pnpm": {
    "overrides": {
      "eslint-plugin-react-hooks>eslint": "9.29.0",
      "react": "19.1.1",
      "react-dom": "19.1.1",
      "form-data": ">=4.0.4",
      "on-headers": ">=1.1.0"
    },
    "supportedArchitectures": {
      "cpu": [
        "current"
      ],
      "os": [
        "darwin",
        "linux"
      ]
    },
    "onlyBuiltDependencies": [
      "@clerk/shared",
      "@parcel/watcher",
      "@swc/core",
      "core-js",
      "core-js-pure",
      "esbuild",
      "nx",
      "oxc-resolver",
      "protobufjs",
      "puppeteer",
      "sharp"
    ]
  }
}
