name: CI Environment Tests

on:
  push:
    branches:
      - main
      - preview
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read

env:
  CI: true
  NODE_ENV: production  # Always production for optimized builds
  # Set DOCS_ENV based on branch - preview for preview branch, production for main
  DOCS_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
  # Environment variables that CI tests will validate
  GOOGLE_SHEETS_API_KEY: ${{ secrets.GOOGLE_SHEETS_API_KEY }}
  GSHEETS_SA_KEY: ${{ secrets.GSHEETS_SA_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Supabase configuration
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  
  
  # GitHub OAuth (for admin portal)
  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  
  # Nx Cloud
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  env-tests:
    name: Environment-Specific Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      # Run ONLY environment-specific tests
      # These tests validate:
      # - Environment variables are present
      # - API tokens are valid
      # - External services are reachable
      # - CI-specific paths and permissions
      - name: Run CI Environment Tests
        run: pnpm test:ci:env
        
      # If environment tests pass, run the build
      # (We assume all other tests passed locally)
      - name: Build affected projects
        run: pnpm exec nx affected -t build --parallel=6 --tags @critical
