name: CI Pipeline Health Check
# Monitors CI pipeline health and provides status reports

on:
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Type of health check'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - quick
          - dependencies

permissions:
  contents: read
  actions: read
  issues: write

jobs:
  pipeline-health:
    name: Check Pipeline Health
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check workflow status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: workflows } = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            console.log('## Active Workflows');
            const activeWorkflows = workflows.workflows.filter(w => 
              w.state === 'active' && 
              !w.path.includes('.disabled') &&
              !w.path.includes('backup')
            );
            
            for (const workflow of activeWorkflows) {
              console.log(`- ${workflow.name} (${workflow.path})`);
              
              // Get recent runs
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                per_page: 5
              });
              
              if (runs.workflow_runs.length > 0) {
                const successRate = runs.workflow_runs.filter(r => r.conclusion === 'success').length / runs.workflow_runs.length * 100;
                console.log(`  Success rate (last 5 runs): ${successRate.toFixed(0)}%`);
              }
            }
            
      - uses: pnpm/action-setup@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          
      - name: Check dependencies
        if: github.event.inputs.check_type == 'dependencies' || github.event.inputs.check_type == 'full'
        run: |
          echo "## Dependency Health Check"
          echo ""
          echo "### Outdated Packages"
          pnpm outdated || true
          echo ""
          echo "### Security Audit"
          pnpm audit || true
          
      - name: Check Nx configuration
        if: github.event.inputs.check_type == 'full'
        run: |
          pnpm install --frozen-lockfile --prefer-offline
          echo "## Nx Configuration Check"
          echo ""
          echo "### Projects"
          npx nx show projects
          echo ""
          echo "### Affected Detection Test"
          npx nx show projects --affected --base=HEAD~1 || true
          
      - name: Generate health report
        run: |
          echo "## 🏥 CI Pipeline Health Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Check Type**: ${{ github.event.inputs.check_type || 'scheduled' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Active Workflows" >> $GITHUB_STEP_SUMMARY
          echo "- nx-optimized-docs-deploy.yml ✅" >> $GITHUB_STEP_SUMMARY
          echo "- pr-validation.yml ✅" >> $GITHUB_STEP_SUMMARY
          echo "- ci-health-check.yml ✅" >> $GITHUB_STEP_SUMMARY
          echo "- simple-deploy.yml (fallback) ⚠️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Optimizations" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Nx affected detection enabled" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Parallel execution configured" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build caching active" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Admin tests excluded" >> $GITHUB_STEP_SUMMARY
          echo "- ⚠️ Nx Cloud distributed execution disabled (for simplicity)" >> $GITHUB_STEP_SUMMARY