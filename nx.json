{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "installation": {
    "version": "21.2.4",
    "ensurePackageJsonConsistency": true
  },
  "namedInputs": {
    "default": [
      "{projectRoot}/**/*",
      "!{projectRoot}/.docusaurus/**/*",
      "!{projectRoot}/build/**/*",
      "!{projectRoot}/dist/**/*",
      "!{projectRoot}/node_modules/**/*",
      "!{workspaceRoot}/**/.ifla-server-state.json",
      "sharedGlobals"
    ],
    "production": [
      "default",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/jest.config.[jt]s",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/**/*.stories.@(js|jsx|ts|tsx|mdx)",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/test-setup.[jt]s",
      "!{projectRoot}/**/*.md",
      "!{projectRoot}/**/*.mdx",
      "!{projectRoot}/README.md",
      "!{projectRoot}/docs/**/*"
    ],
    "non-coding": [
      "!{projectRoot}/**/*.md",
      "!{projectRoot}/**/*.mdx",
      "!{projectRoot}/docs/**/*",
      "!{projectRoot}/**/*.txt",
      "!{projectRoot}/LICENSE",
      "!{projectRoot}/.github/**/*"
    ],
    "docusaurus": [
      "{projectRoot}/**/*.{md,mdx}",
      "{projectRoot}/docusaurus.config.js",
      "{projectRoot}/docusaurus.config.ts",
      "{projectRoot}/sidebars.js",
      "{projectRoot}/sidebars.ts",
      "{projectRoot}/src/**/*",
      "{projectRoot}/static/**/*",
      "{workspaceRoot}/packages/theme/**/*"
    ],
    "docusaurus-no-theme": [
      "{projectRoot}/**/*.{md,mdx}",
      "{projectRoot}/docusaurus.config.js",
      "{projectRoot}/docusaurus.config.ts",
      "{projectRoot}/sidebars.js",
      "{projectRoot}/sidebars.ts",
      "{projectRoot}/src/**/*",
      "{projectRoot}/static/**/*"
    ],
    "sharedGlobals": [
      "{workspaceRoot}/package.json",
      "{workspaceRoot}/pnpm-lock.yaml",
      "{workspaceRoot}/nx.json",
      "{workspaceRoot}/tsconfig.json",
      "{workspaceRoot}/eslint.config.mjs",
      "{workspaceRoot}/.prettierrc",
      "{workspaceRoot}/vite.config.ts",
      "{workspaceRoot}/playwright.config.ts",
      "{workspaceRoot}/.github/workflows/**/*"
    ],
    "buildInputs": [
      "{projectRoot}/src/**/*",
      "{projectRoot}/package.json",
      "{projectRoot}/tsconfig.json",
      "{projectRoot}/docusaurus.config.ts",
      "{projectRoot}/sidebars.ts",
      "!{projectRoot}/**/*.test.*",
      "!{projectRoot}/**/*.spec.*",
      "!{projectRoot}/e2e/**/*"
    ],
    "testInputs": [
      "{projectRoot}/src/**/*",
      "{projectRoot}/test/**/*",
      "{projectRoot}/**/*.test.*",
      "{projectRoot}/**/*.spec.*",
      "{projectRoot}/package.json",
      "{projectRoot}/tsconfig.json",
      "{workspaceRoot}/vite.config.ts",
      "{workspaceRoot}/vitest.config.*"
    ],
    "e2eInputs": [
      "{projectRoot}/e2e/**/*",
      "{projectRoot}/**/*.e2e.*",
      "{projectRoot}/build/**/*",
      "{projectRoot}/dist/**/*",
      "{workspaceRoot}/playwright.config.*"
    ],
    "smokeTestInputs": [
      "{projectRoot}/e2e/smoke/**/*",
      "{projectRoot}/**/*.smoke.*",
      "{workspaceRoot}/playwright.config.smoke.ts",
      "{workspaceRoot}/playwright.config.base.ts"
    ],
    "integrationTestInputs": [
      "{projectRoot}/e2e/integration/**/*",
      "{projectRoot}/**/*.integration.*",
      "{workspaceRoot}/playwright.config.integration.ts",
      "{workspaceRoot}/playwright.config.base.ts"
    ],
    "taggedTestInputs": [
      "{projectRoot}/**/*.test.*",
      "{projectRoot}/**/*.spec.*",
      "{workspaceRoot}/scripts/test-tagging-analyzer.js",
      "{workspaceRoot}/scripts/validate-test-tags.js"
    ]
  },
  "targetDefaults": {
    "build": {
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "buildInputs",
        "^buildInputs",
        "sharedGlobals"
      ],
      "outputs": [
        "{projectRoot}/build",
        "{projectRoot}/dist"
      ],
      "cache": true
    },
    "test": {
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "testInputs",
        "^testInputs",
        {
          "runtime": "node -v"
        }
      ],
      "outputs": [
        "{projectRoot}/coverage",
        "{projectRoot}/test-results"
      ],
      "cache": true
    },
    "lint": {
      "inputs": [
        "default",
        "^default"
      ],
      "outputs": [],
      "cache": true
    },
    "typecheck": {
      "dependsOn": [
        "^build"
      ],
      "cache": true,
      "inputs": [
        "default",
        "{projectRoot}/tsconfig.json",
        "{workspaceRoot}/tsconfig.json"
      ]
    },
    "serve": {
      "cache": false
    },
    "start": {
      "cache": false
    },
    "@nx/js:tsc": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "production",
        "^production"
      ]
    },
    "build:tsc": {
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "production",
        "^production"
      ]
    },
    "e2e": {
      "cache": true,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "e2eInputs",
        "^buildInputs",
        "testInputs"
      ],
      "outputs": [
        "{projectRoot}/test-results",
        "{projectRoot}/playwright-report",
        "{workspaceRoot}/test-results",
        "{workspaceRoot}/playwright-report"
      ],
      "options": {
        "cacheableOperations": [
          "e2e"
        ]
      }
    },
    "test:unit": {
      "cache": true,
      "outputs": [
        "{projectRoot}/coverage",
        "{projectRoot}/test-results"
      ],
      "inputs": [
        "testInputs",
        "sharedGlobals"
      ]
    },
    "test:integration": {
      "cache": true,
      "outputs": [
        "{projectRoot}/coverage",
        "{projectRoot}/test-results"
      ],
      "inputs": [
        "testInputs",
        "sharedGlobals"
      ]
    },
    "test:smoke": {
      "executor": "@nx/playwright:playwright",
      "cache": true,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "smokeTestInputs",
        "^buildInputs"
      ],
      "outputs": [
        "{workspaceRoot}/tmp/playwright-results/smoke",
        "{workspaceRoot}/output/playwright-report/smoke"
      ],
      "options": {
        "config": "playwright.config.smoke.ts"
      }
    },
    "test:integration:e2e": {
      "executor": "@nx/playwright:playwright",
      "cache": true,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "integrationTestInputs",
        "^buildInputs"
      ],
      "outputs": [
        "{workspaceRoot}/tmp/playwright-results/integration",
        "{workspaceRoot}/output/playwright-report/integration"
      ],
      "options": {
        "config": "playwright.config.integration.ts"
      }
    },
    "test:e2e:full": {
      "executor": "@nx/playwright:playwright",
      "cache": true,
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "e2eInputs",
        "^buildInputs"
      ],
      "outputs": [
        "{workspaceRoot}/tmp/playwright-results/e2e",
        "{workspaceRoot}/output/playwright-report/e2e"
      ],
      "options": {
        "config": "playwright.config.e2e.ts"
      }
    },
    "clean": {
      "cache": false
    },
    "prepare": {
      "cache": true,
      "dependsOn": [
        "^build"
      ]
    }
  },
  "plugins": [
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    },
    {
      "plugin": "@nx/vite/plugin",
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test",
        "serveTargetName": "serve",
        "devTargetName": "dev",
        "previewTargetName": "preview",
        "serveStaticTargetName": "serve-static",
        "typecheckTargetName": "typecheck",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/next/plugin",
      "options": {
        "startTargetName": "start",
        "buildTargetName": "build",
        "devTargetName": "dev",
        "serveStaticTargetName": "serve-static",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/jest/plugin",
      "options": {
        "targetName": "test"
      }
    }
  ],
  "nxCloudId": "6857fccbb755d4191ce6fbe4",
  "defaultBase": "preview",
  "cli": {
    "analytics": false
  },
  "parallel": 8,
  "cacheDirectory": ".nx/cache",
  "useDaemonProcess": true,
  "useInferencePlugins": true,
  "defaultTasksRunnerOptions": {
    "parallel": 8,
    "cacheableOperations": [
      "build",
      "test",
      "lint",
      "typecheck",
      "e2e",
      "test:smoke",
      "test:integration:e2e",
      "test:e2e:full"
    ],
    "runtimeCacheInputs": [
      "node -v",
      "pnpm --version"
    ],
    "remoteCache": {
      "enabled": true,
      "silent": false
    }
  },
  "runtimeCacheInputs": [
    "node -v",
    "pnpm --version",
    "echo $NODE_ENV",
    "echo $DOCS_ENV",
    "echo $DOCUSAURUS_SWIZZLE"
  ],
  "generators": {
    "@nx/next": {
      "application": {
        "style": "tailwind",
        "linter": "none"
      }
    },
    "@nx/node": {
      "library": {
        "unitTestRunner": "vitest"
      }
    },
    "@nx/js": {
      "library": {
        "unitTestRunner": "vitest"
      }
    },
    "@nx/react": {
      "library": {
        "unitTestRunner": "vitest"
      }
    }
  },
  "tasksRunnerOptions": {
    "default": {
      "options": {
        "canTrackAnalytics": false,
        "showUsageWarnings": true,
        "lifeCycle": {
          "startCommand": "echo 'Starting Nx Cloud execution'",
          "endCommand": "echo 'Nx Cloud execution completed'"
        },
        "remoteCache": {
          "enabled": true,
          "timeout": 300,
          "silent": false
        }
      }
    }
  },
  "workspaceLayout": {
    "appsDir": "apps",
    "libsDir": "packages"
  },
  "release": {
    "version": {}
  }
}